ext {
    junitVersion =  project.hasProperty('junitVersion') ? rootProject.ext.junitVersion : '4.12'
    androidxJunitVersion =  project.hasProperty('androidxJunitVersion') ? rootProject.ext.androidxJunitVersion : '1.1.1'
    androidxEspressoCoreVersion =  project.hasProperty('androidxEspressoCoreVersion') ? rootProject.ext.androidxEspressoCoreVersion : '3.2.0'
}

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.1'
        classpath 'com.google.gms:google-services:4.3.3'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion project.hasProperty('compileSdkVersion') ? rootProject.ext.compileSdkVersion : 29
    defaultConfig {
        minSdkVersion project.hasProperty('minSdkVersion') ? rootProject.ext.minSdkVersion : 21
        targetSdkVersion project.hasProperty('targetSdkVersion') ? rootProject.ext.targetSdkVersion : 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    google()
    jcenter()
    mavenCentral()
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':capacitor-android')

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"

    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'
    implementation 'com.pusher:push-notifications-android:1.6.2'
    // Optional -- Robolectric environment
//    testImplementation 'androidx.test:core:1.0.0'
    // Optional -- Mockito framework
//    testImplementation 'org.mockito:mockito-core:1.10.19'
//    testImplementation 'junit:junit:4.12'
//    testImplementation 'org.powermock:powermock-core:1.7.0'
//    testImplementation 'org.powermock:powermock-module-junit4:1.7.0'
//    testImplementation'org.powermock:powermock-api-mockito2:1.7.0'
//    testImplementation "org.mockito:mockito-core:2.+"
//    implementation 'org.testng:testng:6.9.6'
//    implementation 'com.android.support:support-media-compat:28.0.0'
//    implementation 'com.android.support:support-v4:28.0.0'
}

configurations {
    compile.exclude group: "junit", module: "junit"
}

//apply plugin: 'com.google.gms.google-services'